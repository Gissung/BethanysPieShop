body {
    margin-top: 0px;
    font-family: 'Lato','Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    margin-left: auto;
    margin-right: auto;
    background-color: #e6e4d9;
    background-image: url('images/pattern.png');
}

#mainheader {
    background-color: #a593c2;
}

nav {
    height: 60px;
    width: 1000px;
    margin: 0 auto 20px;
}

nav>ul {
    list-style-type: none;
    margin: 0;
    padding: 0;
    overflow: hidden;
}

nav>ul>li {
    float: left;
}

nav>ul>li a {
    display: block;
    color: white;
    text-align: center;
    padding: 16px;
    text-decoration: none;
    font-weight: bold;
}

#leftmenu {
    float: left;
    width: 30%;
    margin-bottom: 20px;
}

#main {
    float: right;
    width: 70%;
    margin-bottom: 20px;
}

footer {
    clear: both;
    width: 100%;
}

.searchbox {
    padding: 5px;
    margin: 10px 10px;
    width: 200px;
}

/* a selector tells the browser what we want to select there are
multiple types of selectors*/

/*in this case p is the selector*/
p {
    /*the properties inside the curly brackets tell the browser
    which properties of the element we want to change*/
    font-size: 18px;
}

/*the above code p{color:red}  is what is called a rule. it is 
a rule for how you want paragraphs to look.*/

h3 {
    color: blue;
    font-size: 23px;
}
li{
    /*be careful using just li if you don't want every li 
    on the page to share the same look */
    font-weight: bold;
    /*font weight lets you change the weight of the text to be 
    bold or normal or any other weight*/

    line-height: 1.5; 
    /*a pixel is a fixed unit so if the font size is suddenly changed 
    there might be less or more whitespace than you want which is
    where using a unitless value like you see above might be a good 
    idea
    */

}
figcaption{
    font-style: italic;
}

h1,h2,h3,h4,h5,h6{
/*above is how to to do style for a group of elements*/
letter-spacing: 2px;
text-transform: capitalize;
font-family: 'Cookie',Verdana,Arial, sans-serif;
font-weight: normal;

/* putting a , after a font in font family
provides fallback options in case the user does not have the
first font installed. sans serif is a generic keyword telling
the browser if the user doesn't have these fonts installed
at least use a sans-serif font */

/*not all pcs have the same fonts so it's a good idea to use web safe
fonts times new roman, arial,Courier new for some examples

cssfontstack.com can be used to find websafe fonts
*/
}

h4{
    text-align: center;
} 
/*the following layout will only affect elements with the class promotion*/
.promotion{
 background-color: #23cea6;
 color: white;
 width: 450px;   
 text-align: center; 
 border: 10px solid #a593c2; /*the color can also be apllied on
 only one of the 4 sides border-left instead of border if
 you want to do that for the left side*/
 /*the outline is added on to the border if one uses said element
 */
 padding: 20px;/*padding allows you to add whitespace*/
 margin-bottom: 20px ;
 /*margin adds whitespace outside the element
 When using 2 margins if they collide only the largest
 gets applied instead of both and if they're equal only one is
 applied*/
}
.promotion img{
    width: 50%;/*this is an example of using a relative unit
    without using 50% the image overflows it's container
    Pixels could also be used instead but it is not as constant
    
    em is another relative unit that is calculated based on font 
    size. 
    rem is the same except it uses the font size of the body
    or the HTML element
    */
}
.promotion-purple{
  background-color: #a593c2;
  border-color:  #23cea6;  /*if I don't change the value of
  border it'll just use the one it gets from being part of
  the promotion class instead*/
}
footer{
    padding: 60px;
    /*padding effects the elements width and height a margin
    does not*/
}

#sidebar-heading/*this is how you target an id for styling*/
{
font-size: 24px;
}

#leftmenu > ul > li > ul > li /*this is an example of using a 
combinator to target a list embedded deeply in the leftmenu
*/{
    color: red;
}


#leftmenu a {
    color: #199175;
}
/*the following is an example of working with pseudo classes*/
#leftmenu a:hover {
 color: red;   
}
/*
tr:nth-of-type(1){
    
    this targets the first row of a table and changes the background
    color to red
}
    */
tr:nth-of-type(odd){
    background-color: #b4ddd3;
    /*this targets all of the odd rows in a table*/
}
tr:nth-of-type(even){
 background-color: #e0d7ef;   
}